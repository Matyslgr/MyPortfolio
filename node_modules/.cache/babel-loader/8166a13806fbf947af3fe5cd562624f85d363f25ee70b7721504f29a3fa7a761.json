{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactView',\n  data() {\n    return {\n      name: '',\n      message: ''\n    };\n  },\n  computed: {\n    // Utilisez une propriété calculée pour vérifier si le formulaire est valide\n    isFormValid() {\n      return this.name.trim() !== '' && this.message.trim() !== '';\n    }\n  },\n  methods: {\n    async sendMessage() {\n      try {\n        // Vérifiez si le formulaire est valide avant d'envoyer la demande\n        if (!this.isFormValid) {\n          alert('Veuillez remplir tous les champs du formulaire.');\n          return;\n        }\n\n        // Faire la demande au serveur avec les données du formulaire\n        await axios.post('http://localhost:3000/send-email-from-vue', {\n          name: this.name,\n          message: this.message\n        });\n\n        // Réinitialiser les champs après l'envoi réussi\n        this.name = '';\n        this.message = '';\n        alert('Message envoyé avec succès!');\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du message:', error.message);\n        alert('Échec de l\\'envoi du message. Veuillez réessayer plus tard.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","message","computed","isFormValid","trim","methods","sendMessage","alert","post","error","console"],"sources":["src/components/Contact.vue"],"sourcesContent":["<template>\n  <div class=\"Contact\">\n    <div class=\"contact-title\">\n      <p>Contact Me</p>\n    </div>\n    <div class=\"contact-form\">\n      <div class=\"input-container\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" v-model=\"name\" id=\"name\" placeholder=\"Enter your name\">\n      </div>\n      <div class=\"input-container\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" v-model=\"email\" id=\"email\" placeholder=\"Enter your email\">\n      </div>\n      <div class=\"input-container\">\n        <label for=\"message\">Message:</label>\n        <textarea v-model=\"message\" id=\"message\" placeholder=\"Type your message here\"></textarea>\n        <button @click=\"sendMessage\">Envoyer le message</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactView',\n  data() {\n    return {\n      name: '',\n      message: '',\n    };\n  },\n  computed: {\n    // Utilisez une propriété calculée pour vérifier si le formulaire est valide\n    isFormValid() {\n      return this.name.trim() !== '' && this.message.trim() !== '';\n    },\n  },\n  methods: {\n    async sendMessage() {\n      try {\n        // Vérifiez si le formulaire est valide avant d'envoyer la demande\n        if (!this.isFormValid) {\n          alert('Veuillez remplir tous les champs du formulaire.');\n          return;\n        }\n\n        // Faire la demande au serveur avec les données du formulaire\n        await axios.post('http://localhost:3000/send-email-from-vue', {\n          name: this.name,\n          message: this.message,\n        });\n\n        // Réinitialiser les champs après l'envoi réussi\n        this.name = '';\n        this.message = '';\n\n        alert('Message envoyé avec succès!');\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du message:', error.message);\n        alert('Échec de l\\'envoi du message. Veuillez réessayer plus tard.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.Contact {\n  margin: auto;\n}\n\n.contact-title {\n  max-height: 60vh;\n  color: #ffffff;\n  text-shadow: 4px 4px 8px #afafaf;\n  font-family: \"BoldenVan\", bold;\n  font-style: normal;\n  font-size: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: -10vh 0;\n}\n\n.contact-form {\n  padding: 4vh;\n  max-width: 70%;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto;\n}\n\n.input-container {\n  margin: 15px 0;\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-family: \"Outfit\", sans-serif;\n  font-style: normal;\n  font-size: 120%;\n}\n\nlabel {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\ninput,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 14px;\n  resize: none;\n}\n\n</style>\n"],"mappings":"AAuBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAD,IAAA;MACAE,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,YAAA;MACA,YAAAJ,IAAA,CAAAK,IAAA,kBAAAH,OAAA,CAAAG,IAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACA;QACA;QACA,UAAAH,WAAA;UACAI,KAAA;UACA;QACA;;QAEA;QACA,MAAAT,KAAA,CAAAU,IAAA;UACAT,IAAA,OAAAA,IAAA;UACAE,OAAA,OAAAA;QACA;;QAEA;QACA,KAAAF,IAAA;QACA,KAAAE,OAAA;QAEAM,KAAA;MACA,SAAAE,KAAA;QACAC,OAAA,CAAAD,KAAA,wCAAAA,KAAA,CAAAR,OAAA;QACAM,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}