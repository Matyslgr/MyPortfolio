{"ast":null,"code":"export default {\n  name: 'NavBar',\n  data() {\n    return {\n      isFixed: false\n    };\n  },\n  mounted() {\n    const indicator = document.querySelector('.nav-indicator');\n    const items = document.querySelectorAll('.nav-item');\n    function handleIndicator(el) {\n      items.forEach(item => {\n        item.classList.remove('is-active');\n        item.removeAttribute('style');\n      });\n      const elementColor = el.dataset.activeColor;\n      indicator.style.width = `${el.offsetWidth}px`;\n      indicator.style.backgroundColor = elementColor;\n      indicator.style.left = `${el.offsetLeft}px`;\n      el.classList.add('is-active');\n      el.style.color = elementColor;\n    }\n    function updateNavbarOnLoad() {\n      const offset = window.scrollY;\n      const homePosition = document.querySelector('#home').offsetTop;\n      const aboutPosition = document.querySelector('#about').offsetTop;\n      const skillsPosition = document.querySelector('#skills').offsetTop;\n      const projectsPosition = document.querySelector('#projects').offsetTop;\n      const contactsPosition = document.querySelector('#contacts').offsetTop;\n      if (offset >= homePosition && offset < aboutPosition) {\n        handleIndicator(items[0]);\n      } else if (offset >= aboutPosition && offset < skillsPosition) {\n        handleIndicator(items[1]);\n      } else if (offset >= skillsPosition && offset < projectsPosition) {\n        handleIndicator(items[2]);\n      } else if (offset >= projectsPosition && offset < contactsPosition) {\n        handleIndicator(items[3]);\n      } else {\n        handleIndicator(items[4]);\n      }\n    }\n    items.forEach(item => {\n      item.addEventListener('click', e => {\n        e.preventDefault();\n        handleIndicator(e.target);\n      });\n    });\n    updateNavbarOnLoad(); // Appel de la fonction pour mettre à jour la navbar lors du chargement initial\n\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    handleScroll() {\n      const navbar = document.querySelector('.custom-navbar');\n      const navbarHeight = navbar.clientHeight;\n      const offset = window.scrollY;\n      const fourPercent = window.innerHeight * 0.04;\n      this.isFixed = offset > navbarHeight - fourPercent;\n      const homePosition = document.querySelector('#home').offsetTop;\n      const aboutPosition = document.querySelector('#about').offsetTop;\n      const skillsPosition = document.querySelector('#skills').offsetTop;\n      const projectsPosition = document.querySelector('#projects').offsetTop;\n      const contactsPosition = document.querySelector('#contacts').offsetTop;\n      if (offset >= homePosition && offset < aboutPosition) {\n        handleIndicator(items[0], offset - homePosition);\n      } else if (offset >= aboutPosition && offset < skillsPosition) {\n        handleIndicator(items[1], offset - aboutPosition);\n      } else if (offset >= skillsPosition && offset < projectsPosition) {\n        handleIndicator(items[2], offset - skillsPosition);\n      } else if (offset >= projectsPosition && offset < contactsPosition) {\n        handleIndicator(items[3], offset - projectsPosition);\n      } else {\n        handleIndicator(items[4], offset - contactsPosition);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","isFixed","mounted","indicator","document","querySelector","items","querySelectorAll","handleIndicator","el","forEach","item","classList","remove","removeAttribute","elementColor","dataset","activeColor","style","width","offsetWidth","backgroundColor","left","offsetLeft","add","color","updateNavbarOnLoad","offset","window","scrollY","homePosition","offsetTop","aboutPosition","skillsPosition","projectsPosition","contactsPosition","addEventListener","e","preventDefault","target","handleScroll","beforeDestroy","removeEventListener","methods","navbar","navbarHeight","clientHeight","fourPercent","innerHeight"],"sources":["src/components/Navbar.vue"],"sourcesContent":["  <template>\n    <div>\n      <nav class=\"custom-navbar\" :class=\"{ 'fixed': isFixed }\">\n        <a v-scroll-to=\"'#home'\" class=\"nav-item is-active\" data-active-color=\"#ce0000\" data-target=\"Home\">Home</a>\n        <a v-scroll-to=\"'#about'\" class=\"nav-item\" data-active-color=\"#ff6a00\" data-target=\"About\">About Me</a>\n        <a v-scroll-to=\"'#skills'\" class=\"nav-item\" data-active-color=\"#ffcc00\" data-target=\"Skills\">Skills</a>\n        <a v-scroll-to=\"'#projects'\" class=\"nav-item\" data-active-color=\"#00cc00\" data-target=\"Projects\">Projects</a>\n        <a v-scroll-to=\"'#contacts'\" class=\"nav-item\" data-active-color=\"#0e6aff\" data-target=\"Contact\">Contact</a>\n        <span class=\"nav-indicator\"></span>\n      </nav>\n    </div>\n  </template>\n\n\n</template>\n\n<script>\nexport default {\n  name: 'NavBar',\n  data() {\n    return {\n      isFixed: false,\n    };\n  },\n  mounted() {\n    const indicator = document.querySelector('.nav-indicator');\n    const items = document.querySelectorAll('.nav-item');\n\n    function handleIndicator(el) {\n      items.forEach(item => {\n        item.classList.remove('is-active');\n        item.removeAttribute('style');\n      })\n\n      const elementColor = el.dataset.activeColor;\n\n      indicator.style.width = `${el.offsetWidth}px`;\n      indicator.style.backgroundColor = elementColor;\n      indicator.style.left = `${el.offsetLeft}px`;\n\n      el.classList.add('is-active');\n      el.style.color = elementColor;\n    }\n\n    function updateNavbarOnLoad() {\n      const offset = window.scrollY;\n      const homePosition = document.querySelector('#home').offsetTop;\n      const aboutPosition = document.querySelector('#about').offsetTop;\n      const skillsPosition = document.querySelector('#skills').offsetTop;\n      const projectsPosition = document.querySelector('#projects').offsetTop;\n      const contactsPosition = document.querySelector('#contacts').offsetTop;\n\n      if (offset >= homePosition && offset < aboutPosition) {\n        handleIndicator(items[0]);\n      } else if (offset >= aboutPosition && offset < skillsPosition) {\n        handleIndicator(items[1]);\n      } else if (offset >= skillsPosition && offset < projectsPosition) {\n        handleIndicator(items[2]);\n      } else if (offset >= projectsPosition && offset < contactsPosition) {\n        handleIndicator(items[3]);\n      } else {\n        handleIndicator(items[4]);\n      }\n    }\n\n    items.forEach(item => {\n      item.addEventListener('click', e => {\n        e.preventDefault();\n        handleIndicator(e.target)\n      });\n    });\n\n    updateNavbarOnLoad(); // Appel de la fonction pour mettre à jour la navbar lors du chargement initial\n\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    handleScroll() {\n      const navbar = document.querySelector('.custom-navbar');\n      const navbarHeight = navbar.clientHeight;\n      const offset = window.scrollY;\n      const fourPercent = window.innerHeight * 0.04;\n      this.isFixed = offset > navbarHeight - fourPercent;\n\n      const homePosition = document.querySelector('#home').offsetTop;\n      const aboutPosition = document.querySelector('#about').offsetTop;\n      const skillsPosition = document.querySelector('#skills').offsetTop;\n      const projectsPosition = document.querySelector('#projects').offsetTop;\n      const contactsPosition = document.querySelector('#contacts').offsetTop;\n\n      if (offset >= homePosition && offset < aboutPosition) {\n        handleIndicator(items[0], offset - homePosition);\n      } else if (offset >= aboutPosition && offset < skillsPosition) {\n        handleIndicator(items[1], offset - aboutPosition);\n      } else if (offset >= skillsPosition && offset < projectsPosition) {\n        handleIndicator(items[2], offset - skillsPosition);\n      } else if (offset >= projectsPosition && offset < contactsPosition) {\n        handleIndicator(items[3], offset - projectsPosition);\n      } else {\n        handleIndicator(items[4], offset - contactsPosition);\n      }\n    },\n  },\n};\n</script>\n\n  <style scoped>\n  .custom-navbar {\n    z-index: 1000;\n    margin: auto;\n    background-color: rgba(255, 255, 255, 1);\n    max-width: 70vw;\n    padding: 0 -10%;\n    border-radius: 5vh;\n    box-shadow: 10px 20px 50px rgba(255, 255, 255, 0.8);\n    display: flex;\n    justify-content: space-around;\n    overflow: hidden;\n    overflow-x: auto;\n    position: relative;\n    text-align: center;\n    align-items: center;\n    transition: top 0.5s ease, background-color 1.5s ease, padding-top 0.5s ease;\n    cursor: pointer;\n  }\n\n  .fixed {\n    margin: auto;\n    position: fixed;  \n    top: 4%;\n    left: 50%;\n    transform: translate(-50%, 0);\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.8);\n    transition: top 0.3s ease, background-color 1.5s ease, padding-top 0.3s ease;\n  }\n\n  .nav-item {\n    color: #83818c;\n    font-family: arial, sans-serif;\n    padding: 3.5vh 1vw;\n    margin: 0 6px;\n    position: relative;\n    font-family: \"Protest Strike\", sans-serif;\n    font-size: 2vw;\n    font-style: normal;\n    text-decoration: none;\n  }\n\n  .nav-item:before {\n    content: \"\";\n    position: absolute;\n    bottom: -6px;\n    background-color: #dfe2ea;\n    height: 5px;\n    width: 100%;\n    border-radius: 8px 8px 0 0;\n    left: 0;\n    transition: .3s;\n  }\n\n  .nav-item:not(.is-active):hover:before {\n    bottom: 0;\n  }\n\n  .nav-item:not(.is-active):hover {\n    color: #333;\n  }\n\n  .nav-indicator {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 5px;\n    transition: .4s;\n    border-radius: 8px 8px 0 0;\n  }\n\n  </style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}